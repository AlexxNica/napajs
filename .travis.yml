language: node_js
compiler: default
matrix:
  exclude:
  # Disable the default build and use customized matrix only.
  - compiler: default
  include:
  # Node 4.5.0          Linux (Precise)     G++5.4.1
  - os: linux
    dist: precise
    node_js: '4.5.0'
    compiler: g++-5
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - george-edison55-precise-backports
        packages:
        - g++-5
        - cmake-data
        - cmake
    env:
    - COMPILER_OVERRIDE="CXX=g++-5 CC=gcc-5"
  # Node LTS (6.x)      Linux (Trusty)      G++5.4.1
  - os: linux
    dist: trusty
    node_js: '6'
    compiler: g++-5
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
    env:
    - COMPILER_OVERRIDE="CXX=g++-5 CC=gcc-5"
  # Node LTS (6.x)      OS X (Yosemite)     AppleClang 6.1
  - os: osx
    node_js: '6'
    osx_image: xcode6.4
  # Node LTS (8.x)      Linux (Trusty)      G++6.3.0
  - os: linux
    dist: trusty
    node_js: '8'
    compiler: g++-6
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
    env:
    - COMPILER_OVERRIDE="CXX=g++-6 CC=gcc-6"
  # Node LTS (8.x)      OS X (Sierra)       AppleClang 8.1
  - os: osx
    node_js: '8'
    osx_image: xcode8.3
  # Node LTS (8.x)      OS X (Sierra)       AppleClang
  - os: osx
    node_js: '8'
    osx_image: xcode8.2
  # Node LTS (8.x)      OS X (Sierra)       AppleClang
  - os: osx
    node_js: '8'
    osx_image: xcode8.1

before_install:
- |
  if [ $TRAVIS_OS_NAME == linux ]; then
    export ${COMPILER_OVERRIDE}
  fi
install:
- npm install cmake-js -g
- npm install
script:
- npm test
- npm run unittest
